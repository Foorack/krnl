[workspace]
members = ["benches/*", "tests/*", "xtask"]

[workspace.package]
version = "0.0.1-alpha"
authors = ["Charles R Earp <charles.r.earp@gmail.com>"]
edition = "2021"
rust-version = "1.68.2"
description = "Safe, portable, high performance compute (GPGPU) kernels."
documentation = "https://docs.rs/krnl"
readme = "README.md"
homepage = "https://github.com/charles-r-earp/krnl"
repository = "https://github.com/charles-r-earp/krnl"
license = "MIT OR Apache-2.0"
publish = false

[workspace.dependencies]
serde = { version = "1.0.143", default-features = false, features = ["derive"] }
dry = "0.1.1"
paste = "1.0.7"
derive_more = { version = "0.99.11", default-features = false }
anyhow = "1.0.60"
half = { version = "2.1.0", default-features = false, features = ["num-traits", "serde"] }
num-traits = { version = "0.2.14", default-features = false }
thiserror = "1.0.31"
bincode2 = "2.0.1"
rspirv = "0.11.0"
flate2 = "1.0.25"
hex = "0.4.3"
rustversion = "1.0.12"
clap = { version = "4.0.22", features = ["derive"] }
fxhash = "0.2.1"

[package]
name = "krnl"
version.workspace = true
authors.workspace = true
edition.workspace = true
rust-version.workspace = true
description.workspace = true
documentation.workspace = true
readme.workspace = true
homepage.workspace = true
repository.workspace = true
license.workspace = true
keywords = ["kernel", "compute", "vulkan", "gpu"]
categories = ["hardware-support", "science", "mathematics"]
publish = false
autobins = false 
autoexamples = false
autotests = false
autobenches = false


[dependencies]
krnl-macros = { path = "krnl-macros" }
krnl-core = { path = "krnl-core" }
serde = { workspace = true, default-features = false, features = ["derive", "rc"] }
anyhow.workspace = true
half = { workspace = true, features = ["std"] }
num-traits = { workspace = true, features = ["std"] }
paste.workspace = true 
dry.workspace = true
derive_more = { workspace = true, features = ["unwrap", "deref", "deref_mut"] }
thiserror.workspace = true
parking_lot = "0.12.1"
once_cell = { version = "1.13.0", default-features = false, features = ["std", "alloc"] }
bytemuck = { version = "1.11.0", default-features = false }
bincode2.workspace = true
flate2.workspace = true
dashmap = { version = "5.3.4", optional = true }
rspirv = { workspace = true, optional = true }
fxhash = { workspace = true, optional = true }


#[target."cfg(any(target_os = \"ios\", target_os = \"macos\"))".dependencies]
#ash-molten = { version = "0.13.1", features = ["external"], optional = true }

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
vulkano = { git = "https://github.com/vulkano-rs/vulkano", branch = "0.32.X", optional = true, default-features = false }
ash = { version = "0.37.1", optional = true }
atomicbox = { version = "0.4.0", optional = true }

[features]
default = ["device"]
device = ["dep:vulkano", "dep:ash", "dep:dashmap", "dep:rspirv", "dep:atomicbox", "dep:fxhash"]

[package.metadata.krnlc]
default-features = false
features = ["device"]

[package.metadata.krnlc.dependencies]
dry = {}
paste = {}

[[test]]
name = "integration_tests"
path = "tests/integration_tests.rs"
harness = false

[target.'cfg(not(target_arch = "wasm32"))'.dev-dependencies]
libtest-mimic = "0.6.0"
rayon = "1.7.0"

[target.'cfg(target_arch = "wasm32")'.dev-dependencies]
wasm-bindgen-test = "0.3.33"
