const fn __module(path:&'static str)->Option<&'static str>{#[allow(unused_variables)]let path=path.as_bytes();{let module_path="compute_benchmarks::krnl_backend::kernels".as_bytes();if path.len()==module_path.len()+"::module".len(){let success=path[0]==module_path[0]&&path[1]==module_path[1]&&path[2]==module_path[2]&&path[3]==module_path[3]&&path[4]==module_path[4]&&path[5]==module_path[5]&&path[6]==module_path[6]&&path[7]==module_path[7]&&path[8]==module_path[8]&&path[9]==module_path[9]&&path[10]==module_path[10]&&path[11]==module_path[11]&&path[12]==module_path[12]&&path[13]==module_path[13]&&path[14]==module_path[14]&&path[15]==module_path[15]&&path[16]==module_path[16]&&path[17]==module_path[17]&&path[18]==module_path[18]&&path[19]==module_path[19]&&path[20]==module_path[20]&&path[21]==module_path[21]&&path[22]==module_path[22]&&path[23]==module_path[23]&&path[24]==module_path[24]&&path[25]==module_path[25]&&path[26]==module_path[26]&&path[27]==module_path[27]&&path[28]==module_path[28]&&path[29]==module_path[29]&&path[30]==module_path[30]&&path[31]==module_path[31]&&path[32]==module_path[32]&&path[33]==module_path[33]&&path[34]==module_path[34]&&path[35]==module_path[35]&&path[36]==module_path[36]&&path[37]==module_path[37]&&path[38]==module_path[38]&&path[39]==module_path[39]&&path[40]==module_path[40];if success{return Some("(dependencies(\"\\\"krnl-core\\\" = { path = \\\"/home/charles/Documents/rust/krnl/krnl-core\\\" }\")) => (#[cfg(not(target_arch = \"spirv\"))] use krnl :: krnl_core ; use krnl_core ::\nkernel ; #[kernel(threads(128), for_each)] pub fn\nsaxpy(#[item] x : & f32, #[push] alpha : f32, #[item] y : & mut f32)\n{ * y += alpha * * x ; })");}}}None}pub(super)const fn __kernel(path:&'static str)->Option<(u64,&'static[u32],Features)>{#[allow(unused_variables)]let path=path.as_bytes();{let kernel_path="compute_benchmarks::krnl_backend::kernels::saxpy".as_bytes();let kernel_spirv=&[119734787,66816,983040,82,0,131089,1,131089,5345,393227,69,1280527431,1685353262,808793134,0,196622,0,3,655375,5,1,1852399981,0,2,3,4,5,6,393232,1,17,128,1,1,327687,7,795046515,778201452,29554,1769479,8,1836017711,1751330661,1701605985,1663971187,1869050465,1953064751,1701339951,1970236259,1915712372,762606453,762671207,862007397,842555703,825635937,912602679,943272751,842084405,1634886447,796091764,1919512691,1953705334,1920151396,1918971747,1915644003,115,327686,9,0,1752198241,97,524293,9,1919639391,1935633518,2037413985,1752397136,1936617283,29556,262149,2,1970238055,29552,327685,3,1651469415,1767861345,100,196613,4,7495544,262149,5,2003984249,0,327685,6,1752397168,1852793695,7566451,262215,10,6,4,327752,9,0,35,0,262215,2,11,24,262215,3,11,28,196679,11,2,327752,11,0,35,0,262215,4,34,0,262215,4,33,0,262215,5,34,0,262215,5,33,1,196679,12,2,327752,12,0,35,0,196679,4,24,327752,12,1,35,4,327752,12,2,35,8,327752,12,3,35,12,131091,13,262165,14,32,0,262167,15,14,3,196630,16,32,196637,10,16,196638,9,16,196641,19,13,262176,20,1,15,262203,20,2,1,262203,20,3,1,196638,11,10,262176,21,12,11,262187,14,22,0,262203,21,4,12,262203,21,5,12,393246,12,9,14,14,14,262176,23,9,12,262203,23,6,9,262176,24,9,16,262176,25,12,16,262187,14,26,128,131092,27,262165,70,32,1,262176,71,9,14,262187,70,72,2,262187,70,74,1,262187,70,78,3,327734,13,1,0,19,131320,29,262152,7,8,0,262205,15,30,2,262205,15,31,3,327745,71,73,6,72,262205,14,33,73,262152,7,9,38,393281,24,36,6,22,22,262205,16,37,36,262152,7,8,0,327761,14,38,31,0,327761,14,39,30,0,327812,14,40,39,26,65853,131321,42,131320,42,458997,14,43,38,29,44,45,262390,53,45,0,131321,49,131320,49,262152,7,8,0,327856,27,50,43,33,196855,52,0,262394,50,52,53,131320,52,262152,8,253,8,327745,71,75,6,74,262205,14,76,75,327808,14,77,43,76,393281,25,54,4,22,77,262152,8,271,8,327745,71,79,6,78,262205,14,80,79,327808,14,81,43,80,393281,25,55,5,22,81,262152,7,10,18,262205,16,56,54,262152,7,10,4,262205,16,58,55,524300,16,59,69,50,37,56,58,196670,55,59,262152,7,8,0,327808,14,44,43,40,65853,131321,45,131320,45,131321,42,131320,53,65789,65592];let features=Features::new();if path.len()==kernel_path.len(){let success=path[0]==kernel_path[0]&&path[1]==kernel_path[1]&&path[2]==kernel_path[2]&&path[3]==kernel_path[3]&&path[4]==kernel_path[4]&&path[5]==kernel_path[5]&&path[6]==kernel_path[6]&&path[7]==kernel_path[7]&&path[8]==kernel_path[8]&&path[9]==kernel_path[9]&&path[10]==kernel_path[10]&&path[11]==kernel_path[11]&&path[12]==kernel_path[12]&&path[13]==kernel_path[13]&&path[14]==kernel_path[14]&&path[15]==kernel_path[15]&&path[16]==kernel_path[16]&&path[17]==kernel_path[17]&&path[18]==kernel_path[18]&&path[19]==kernel_path[19]&&path[20]==kernel_path[20]&&path[21]==kernel_path[21]&&path[22]==kernel_path[22]&&path[23]==kernel_path[23]&&path[24]==kernel_path[24]&&path[25]==kernel_path[25]&&path[26]==kernel_path[26]&&path[27]==kernel_path[27]&&path[28]==kernel_path[28]&&path[29]==kernel_path[29]&&path[30]==kernel_path[30]&&path[31]==kernel_path[31]&&path[32]==kernel_path[32]&&path[33]==kernel_path[33]&&path[34]==kernel_path[34]&&path[35]==kernel_path[35]&&path[36]==kernel_path[36]&&path[37]==kernel_path[37]&&path[38]==kernel_path[38]&&path[39]==kernel_path[39]&&path[40]==kernel_path[40]&&path[41]==kernel_path[41]&&path[42]==kernel_path[42]&&path[43]==kernel_path[43]&&path[44]==kernel_path[44]&&path[45]==kernel_path[45]&&path[46]==kernel_path[46]&&path[47]==kernel_path[47];if success{return Some((9143436443785369139u64,kernel_spirv,features));}}}None}